---
# tasks file for /etc/ansible/roles/slapd
- name: OS specific vars
  include_vars: "{{ ansible_distribution }}.yml"

- name: install
  package:
    name: "{{ ldap_packages }}"
    state: present

- name: activate service
  service:
    name: "{{ ldap_service }}"
    state: started
    enabled: yes

- name: reconfigure slapd
  ldap_attr:
    dn: olcDatabase={2}hdb,cn=config
    name: "{{ item.key }}"
    values: "{{ item.value }}"
    state: exact
  with_dict:
    olcSuffix: "{{ ldap_suffix }}"
    olcRootDN: "{{ ldap_admin_dn }}"
    olcRootPW: "{{ ldap_admin_password }}"

- name: load additionnal schema
  include_tasks: import_ldap_schema.yml
  loop: "{{ ldap_schemas }}"
  loop_control:
    loop_var: schema

- name: create suffix
  ldap_entry:
    server_uri: ldap://localhost
    bind_dn: "{{ ldap_admin_dn }}"
    bind_pw: "{{ ldap_admin_password }}"
    dn: "{{ ldap_suffix }}"
    objectClass: domain
    attributes:
      dc: "{{ ldap_domain }}"

- name: configure client
  template:
    src: ldap.conf
    dest: /etc/openldap/ldap.conf
    mode: 0644

- name: create passwd file
  copy:
    dest: /root/.ldap.secrets
    mode: 0600
    content: "{{ ldap_admin_password }}"

- name: import data
  block:
  - name:  create initial directory
    file:
      path: /root/Ldif
      state: directory
      mode: 0700

  - name: send ldif files
    template:
      src: "{{ item }}"
      dest: /root/Ldif/
      mode: 0600
    with_fileglob: "templates/[0-9]*.ldif"

  - name: get list of ldif files
    find:
      paths: /root/Ldif
      patterns: "*.ldif"
      file_type: file
    register: ldif_list

  - name: import ldif files
    command: "ldapadd -y /root/.ldap.secrets -xD {{ ldap_admin_dn }} -f {{ item .path}}"
    with_items: "{{ ldif_list.files }}"
  when: import_data == true
